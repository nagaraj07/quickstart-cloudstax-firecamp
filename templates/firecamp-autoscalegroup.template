{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates an AutoScalingGroup in the subnets.",
    "Parameters": {
        "ContainerPlatform": {
            "Type": "String",
            "Default": "ecs",
            "AllowedValues": [
                "ecs",
                "swarm"
            ],
            "Description": "The container orchestration platform."
        },
        "ContainerPlatformRole": {
            "Type": "String",
            "Default": "worker",
            "AllowedValues": [
                "manager",
                "worker"
            ],
            "Description": "The role in the container orchestration platform. For Swarm, one node could be a manager or worker."
        },
        "ClusterName": {
            "Type": "String",
            "Description": "Name of the cluster.",
            "Default": "default",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
            "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
        },
        "KeyPairName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the cluster instances."
        },
        "Release": {
            "Type": "String",
            "Default": "latest",
            "Description": "The FireCamp release version"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "SubnetIDs": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy node(s)."
        },
        "NumberOfNodes": {
            "Type": "Number",
            "Default": "3",
            "Description": "Number of instances to launch in the cluster."
        },
        "ServiceSecurityGroupID": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "The SecurityGroup to access the services in the cluster."
        },
        "InternalAccessSecurityGroupID": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "The internal SecurityGroup for the cluster nodes to access each other."
        },
        "NodeInstanceProfileID": {
            "Type": "String",
            "Default": "",
            "Description": "ID of the instance IAM Profile"
        },
        "NodeInstanceRoleName": {
            "Type": "String",
            "Description": "Name of the instance IAM role"
        },
        "NodeAMIOS": {
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the service instances",
            "Type": "String"
        },
        "NodeInstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "ConstraintDescription": "Please choose a valid instance type."
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Default": "aws-quickstart",
            "Type": "String",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "QSS3KeyPrefix": {
            "Default": "quickstart-cloudstax-firecamp/",
            "Type": "String"
        }
    },
    "Mappings": {
        "LinuxAMINameMap": {
            "Amazon-Linux-HVM": {
                "Code": "AMZNLINUXHVM"
            }
        },
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUXHVM": "amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2"
            },
            "ap-northeast-1": {
                "AMZNLINUXHVM": "ami-00a5245b4816c38e6"
            },
            "ap-northeast-2": {
                "AMZNLINUXHVM": "ami-00dc207f8ba6dc919"
            },
            "ap-south-1": {
                "AMZNLINUXHVM": "ami-0ad42f4f66f6c1cc9"
            },
            "ap-southeast-1": {
                "AMZNLINUXHVM": "ami-05b3bcf7f311194b3"
            },
            "ap-southeast-2": {
                "AMZNLINUXHVM": "ami-02fd0b06f06d93dfc"
            },
            "ca-central-1": {
                "AMZNLINUXHVM": "ami-07423fb63ea0a0930"
            },
            "eu-central-1": {
                "AMZNLINUXHVM": "ami-0cfbf4f6db41068ac"
            },
            "eu-west-1": {
                "AMZNLINUXHVM": "ami-08935252a36e25f85"
            },
            "eu-west-2": {
                "AMZNLINUXHVM": "ami-01419b804382064e4"
            },
            "sa-east-1": {
                "AMZNLINUXHVM": "ami-05145e0b28ad8e0b2"
            },
            "us-east-1": {
                "AMZNLINUXHVM": "ami-0080e4c5bc078760e"
            },
            "us-east-2": {
                "AMZNLINUXHVM": "ami-0cd3dfa4e37921605"
            },
            "us-west-1": {
                "AMZNLINUXHVM": "ami-0ec6517f6edbf8044"
            },
            "us-west-2": {
                "AMZNLINUXHVM": "ami-01e24be29428c15b2"
            }
        }
    },
    "Resources": {
        "ServiceAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "SubnetIDs"
                },
                "LaunchConfigurationName": {
                    "Ref": "ContainerInstances"
                },
                "MinSize": "1",
                "MaxSize": {
                    "Ref": "NumberOfNodes"
                },
                "DesiredCapacity": {
                    "Ref": "NumberOfNodes"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ClusterName"
                                    },
                                    {
                                        "Ref": "ContainerPlatformRole"
                                    }
                                ]
                            ]
                        },
                        "PropagateAtLaunch": true
                    },
                    {
                        "Key": {
                            "Fn::Join": [
                                "-",
                                [
                                    "firecamp",
                                    {
                                        "Ref": "ContainerPlatformRole"
                                    }
                                ]
                            ]
                        },
                        "Value": {
                            "Ref": "ClusterName"
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumberOfNodes"
                    },
                    "Timeout": "PT10M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": true
                }
            }
        },
        "ContainerInstances": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ],
                        "roleName": {
                            "Ref": "NodeInstanceRoleName"
                        },
                        "type": "S3"
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/init.sh": {
                                "group": "root",
                                "mode": "0755",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://",
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            ".s3.amazonaws.com/",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/init.sh"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/tmp/init.sh",
                                            {
                                                "Ref": "Release"
                                            },
                                            {
                                                "Ref": "ClusterName"
                                            },
                                            {
                                                "Ref": "ContainerPlatform"
                                            },
                                            {
                                                "Ref": "ContainerPlatformRole"
                                            },
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    {
                                                        "Ref": "AvailabilityZones"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "LinuxAMINameMap",
                                {
                                    "Ref": "NodeAMIOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "ServiceSecurityGroupID"
                    },
                    {
                        "Ref": "InternalAccessSecurityGroupID"
                    }
                ],
                "InstanceType": {
                    "Ref": "NodeInstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "NodeInstanceProfileID"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -x\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ContainerInstances",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Signal init result\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ServiceAutoScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}
